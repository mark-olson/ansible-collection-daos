#
# Copyright 2018-2020, Intel Corporation
#
# 'recipe' for Docker building the DCO OPT environment
#

# Pull base image
FROM fedora:latest
MAINTAINER DCO <dev_ops@hpdd.intel.com>

# use same UID as host and default value of 1000 if not specified
ARG UID=1000

# Add build user (to keep pylint happy)
ENV USER build
ENV PASSWD build
RUN useradd -u $UID -ms /bin/bash $USER

RUN dnf install -y bandit bzip2-devel \
                   chkconfig clamav clamav-devel codespell curl \
                   file gcc git gdbm-devel git hostname json-c-devel \
                   libffi-devel libnsl2-devel libselinux-python3 \
                   libyaml-devel lz4-devel \
                   ncurses-devel openssl-devel \
                   python3-demjson python3-pip python3-devel python3-pygithub \
                   pylint \
                   readline-devel rubygems ShellCheck sqlite-devel tk-devel \
                   uuid-devel which xz-devel yamllint zlib-devel

RUN gem install ruby-lint

# Install maldetect
ENV LMD_BASE http://rfxn.com/downloads/
ARG JENKINS_URL=https://build.hpdd.intel.com/
RUN lmd_tarball=maldetect-current.tar.gz; \
    curl "${LMD_BASE}/${lmd_tarball}" \
         -z "./${lmd_tarball}" --retry 10 --retry-max-time 60 \
         --silent --show-error \
         --fail -O; \
    mkdir -p /var/tmp/lmd_src; \
    tar -C /var/tmp/lmd_src --strip-components=1 \
      -xf "./${lmd_tarball}"; \
    pushd /var/tmp/lmd_src; \
        ./install.sh; \
    popd; \
    rm -rf /var/tmp/lmd_src; \
    fc_conf="/etc/freshclam.conf"; \
    printf "ScriptedUpdates no\n" >> "$fc_conf"; \
    JOB_URL="${JENKINS_URL}job/clamav_daily_update/"; \
    printf "PrivateMirror %s\n" \
         "${JOB_URL}lastSuccessfulBuild/artifact/download/clam" >> \
         "$fc_conf"

ARG CACHEBUST
RUN /usr/local/sbin/maldet --update-sigs; \
    freshclam

